[project]
name = "Private_Event_Planner"
version = "0.9.0"
description = "Private Event Planner is an application designed for organizing private events intuitively. It allows users to create and manage events in an easy way. Events can be accessed only by direct link, generated on event creation. This provides a secure way of sharing events with others. In order to create event user must provide basic information about event and his email address. Email address is used to send editing link to user. Application also allows to export events to ICS format and to add them on google calendar."
authors = [
    { name="Michał Goławski", email="michal.golawski3.stud@pw.edu.pl" },
    { name="Marcin Sikorski", email="marcin.sikorski3.stud@pw.edu.pl" },
    { name="Maciej Dobrowolski", email="maciej.dobrowolski2.stud@pw.edu.pl" }
]
requires-python = ">=3.10"

dependencies = [
    "Django==5.0.0",
    "djangorestframework==3.15.0",
    "dramatiq[rabbitmq]==1.14.0",
    "django-dramatiq==0.13.0",
    "Pillow==11.1.0",
    "psycopg2-binary==2.9.9",
    "factory-boy==3.3.3",
    "ics==0.7.2",
    "drf_spectacular==0.28.0",
    "gunicorn==23.0.0",
    "pytest==8.3.5"
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["private_event_planner*", "events*"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "manage.py",
    "migrations"
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.

select = ["ALL"]
ignore = [
    "PLR2004",  # magic value
    "T201",     # prints
    "S324",     # insecure hash
    "S311",     # insecure random method
    "RET505",   # elif instead of if
    "Q000",     # string consistent quotes
    "D205",     # blank line after summary in docstring
    "D212",     # multi-line docstring should start on the first line
    "UP012",    # encode on UTF8
    "D100",     # docstrings in modules
    "C901",     # function is too complex
    "PT009",    # pytest.raises() block should contain a single simple statement
    "ANN003",   # Missing return type annotation for public function
    "D102",     # Missing docstring in public method
    "ANN001",   # Missing type annotation for function argument
    "ANN201",   # Missing return type annotation for public function
    "D103",     # Missing docstring in public function
    "D101",     # Missing docstring in public class
    "D104",     # Missing docstring in public package
    "D106",     # Missing docstring in public nested class
    "ANN002",   # Missing type annotation for `*args`
    "D105",     # Missing docstring in magic method
    "RUF012",   # Mutable class attributes should be annotated with `typing.ClassVar`
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"